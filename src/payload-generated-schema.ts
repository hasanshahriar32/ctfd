/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:db-schema` to regenerate this file.
 */

import {
  pgTable,
  index,
  uniqueIndex,
  foreignKey,
  serial,
  timestamp,
  varchar,
  numeric,
  integer,
  text,
  jsonb,
  boolean,
  pgEnum,
} from '@payloadcms/db-vercel-postgres/drizzle/pg-core'
import { sql, relations } from '@payloadcms/db-vercel-postgres/drizzle'
export const enum_studies_blocks_call_to_action_actions_link_type = pgEnum(
  'enum_studies_blocks_call_to_action_actions_link_type',
  ['page', 'custom'],
)
export const enum_studies_blocks_call_to_action_background_color = pgEnum(
  'enum_studies_blocks_call_to_action_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_studies_blocks_content_columns_width = pgEnum(
  'enum_studies_blocks_content_columns_width',
  ['oneThird', 'half', 'twoThirds', 'full'],
)
export const enum_studies_blocks_content_columns_alignment = pgEnum(
  'enum_studies_blocks_content_columns_alignment',
  ['left', 'center', 'right'],
)
export const enum_studies_blocks_content_background_color = pgEnum(
  'enum_studies_blocks_content_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_studies_blocks_content_accent_line_alignment = pgEnum(
  'enum_studies_blocks_content_accent_line_alignment',
  ['left', 'right'],
)
export const enum_studies_blocks_content_padding_top = pgEnum(
  'enum_studies_blocks_content_padding_top',
  ['none', 'small', 'medium', 'large'],
)
export const enum_studies_blocks_content_padding_bottom = pgEnum(
  'enum_studies_blocks_content_padding_bottom',
  ['none', 'small', 'medium', 'large'],
)
export const enum_studies_blocks_cta_grid_actions_link_type = pgEnum(
  'enum_studies_blocks_cta_grid_actions_link_type',
  ['page', 'custom'],
)
export const enum_studies_blocks_image_type = pgEnum('enum_studies_blocks_image_type', [
  'normal',
  'fullscreen',
  'wide',
])
export const enum_studies_blocks_image_content_collage_background_color = pgEnum(
  'enum_studies_blocks_image_content_collage_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_studies_blocks_image_content_collage_link_type = pgEnum(
  'enum_studies_blocks_image_content_collage_link_type',
  ['page', 'custom'],
)
export const enum_studies_blocks_image_grid_background_color = pgEnum(
  'enum_studies_blocks_image_grid_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_studies_blocks_slider_background_color = pgEnum(
  'enum_studies_blocks_slider_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_studies_blocks_spacer_size = pgEnum('enum_studies_blocks_spacer_size', [
  'small',
  'medium',
  'large',
])
export const enum_studies_blocks_statistics_top_overlap = pgEnum(
  'enum_studies_blocks_statistics_top_overlap',
  ['none', 'small', 'medium', 'large'],
)
export const enum_studies_blocks_statistics_bottom_overlap = pgEnum(
  'enum_studies_blocks_statistics_bottom_overlap',
  ['none', 'small', 'medium', 'large'],
)
export const enum_studies_blocks_study_slider_background_color = pgEnum(
  'enum_studies_blocks_study_slider_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_call_to_action_actions_link_type = pgEnum(
  'enum_pages_blocks_call_to_action_actions_link_type',
  ['page', 'custom'],
)
export const enum_pages_blocks_call_to_action_background_color = pgEnum(
  'enum_pages_blocks_call_to_action_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_content_columns_width = pgEnum(
  'enum_pages_blocks_content_columns_width',
  ['oneThird', 'half', 'twoThirds', 'full'],
)
export const enum_pages_blocks_content_columns_alignment = pgEnum(
  'enum_pages_blocks_content_columns_alignment',
  ['left', 'center', 'right'],
)
export const enum_pages_blocks_content_background_color = pgEnum(
  'enum_pages_blocks_content_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_content_accent_line_alignment = pgEnum(
  'enum_pages_blocks_content_accent_line_alignment',
  ['left', 'right'],
)
export const enum_pages_blocks_content_padding_top = pgEnum(
  'enum_pages_blocks_content_padding_top',
  ['none', 'small', 'medium', 'large'],
)
export const enum_pages_blocks_content_padding_bottom = pgEnum(
  'enum_pages_blocks_content_padding_bottom',
  ['none', 'small', 'medium', 'large'],
)
export const enum_pages_blocks_cta_grid_actions_link_type = pgEnum(
  'enum_pages_blocks_cta_grid_actions_link_type',
  ['page', 'custom'],
)
export const enum_pages_blocks_image_type = pgEnum('enum_pages_blocks_image_type', [
  'normal',
  'fullscreen',
  'wide',
])
export const enum_pages_blocks_image_content_collage_background_color = pgEnum(
  'enum_pages_blocks_image_content_collage_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_image_content_collage_link_type = pgEnum(
  'enum_pages_blocks_image_content_collage_link_type',
  ['page', 'custom'],
)
export const enum_pages_blocks_image_grid_background_color = pgEnum(
  'enum_pages_blocks_image_grid_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_slider_background_color = pgEnum(
  'enum_pages_blocks_slider_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_blocks_spacer_size = pgEnum('enum_pages_blocks_spacer_size', [
  'small',
  'medium',
  'large',
])
export const enum_pages_blocks_statistics_top_overlap = pgEnum(
  'enum_pages_blocks_statistics_top_overlap',
  ['none', 'small', 'medium', 'large'],
)
export const enum_pages_blocks_statistics_bottom_overlap = pgEnum(
  'enum_pages_blocks_statistics_bottom_overlap',
  ['none', 'small', 'medium', 'large'],
)
export const enum_pages_blocks_study_slider_background_color = pgEnum(
  'enum_pages_blocks_study_slider_background_color',
  ['none', 'red', 'blue', 'orange'],
)
export const enum_pages_hero_type = pgEnum('enum_pages_hero_type', [
  'minimal',
  'contentAboveImage',
  'contentLeftOfImage',
])
export const enum_mega_menu_nav_link_type = pgEnum('enum_mega_menu_nav_link_type', [
  'page',
  'custom',
])
export const enum_footer_nav_link_type = pgEnum('enum_footer_nav_link_type', ['page', 'custom'])

export const users = pgTable(
  'users',
  {
    id: serial('id').primaryKey(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    email: varchar('email').notNull(),
    resetPasswordToken: varchar('reset_password_token'),
    resetPasswordExpiration: timestamp('reset_password_expiration', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    salt: varchar('salt'),
    hash: varchar('hash'),
    loginAttempts: numeric('login_attempts').default('0'),
    lockUntil: timestamp('lock_until', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    users_updated_at_idx: index('users_updated_at_idx').on(columns.updatedAt),
    users_created_at_idx: index('users_created_at_idx').on(columns.createdAt),
    users_email_idx: uniqueIndex('users_email_idx').on(columns.email),
  }),
)

export const media = pgTable(
  'media',
  {
    id: serial('id').primaryKey(),
    alt: varchar('alt').notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    url: varchar('url'),
    thumbnailURL: varchar('thumbnail_u_r_l'),
    filename: varchar('filename'),
    mimeType: varchar('mime_type'),
    filesize: numeric('filesize'),
    width: numeric('width'),
    height: numeric('height'),
    focalX: numeric('focal_x'),
    focalY: numeric('focal_y'),
    sizes_card_url: varchar('sizes_card_url'),
    sizes_card_width: numeric('sizes_card_width'),
    sizes_card_height: numeric('sizes_card_height'),
    sizes_card_mimeType: varchar('sizes_card_mime_type'),
    sizes_card_filesize: numeric('sizes_card_filesize'),
    sizes_card_filename: varchar('sizes_card_filename'),
    sizes_feature_url: varchar('sizes_feature_url'),
    sizes_feature_width: numeric('sizes_feature_width'),
    sizes_feature_height: numeric('sizes_feature_height'),
    sizes_feature_mimeType: varchar('sizes_feature_mime_type'),
    sizes_feature_filesize: numeric('sizes_feature_filesize'),
    sizes_feature_filename: varchar('sizes_feature_filename'),
  },
  (columns) => ({
    media_updated_at_idx: index('media_updated_at_idx').on(columns.updatedAt),
    media_created_at_idx: index('media_created_at_idx').on(columns.createdAt),
    media_filename_idx: uniqueIndex('media_filename_idx').on(columns.filename),
    media_sizes_card_sizes_card_filename_idx: index('media_sizes_card_sizes_card_filename_idx').on(
      columns.sizes_card_filename,
    ),
    media_sizes_feature_sizes_feature_filename_idx: index(
      'media_sizes_feature_sizes_feature_filename_idx',
    ).on(columns.sizes_feature_filename),
  }),
)

export const form_submissions = pgTable(
  'form_submissions',
  {
    id: serial('id').primaryKey(),
    name: varchar('name').notNull(),
    email: varchar('email').notNull(),
    message: varchar('message').notNull(),
    source: varchar('source').notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    form_submissions_updated_at_idx: index('form_submissions_updated_at_idx').on(columns.updatedAt),
    form_submissions_created_at_idx: index('form_submissions_created_at_idx').on(columns.createdAt),
  }),
)

export const studies_blocks_call_to_action_actions = pgTable(
  'studies_blocks_call_to_action_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    link_type: enum_studies_blocks_call_to_action_actions_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_call_to_action_actions_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_call_to_action_actions_parent_id_idx').on(
      columns._parentID,
    ),
    studies_blocks_call_to_action_actions_link_link_page_idx: index(
      'studies_blocks_call_to_action_actions_link_link_page_idx',
    ).on(columns.link_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_call_to_action.id],
      name: 'studies_blocks_call_to_action_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_call_to_action = pgTable(
  'studies_blocks_call_to_action',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_call_to_action_background_color('background_color').default('none'),
    content: jsonb('content').notNull(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_call_to_action_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_call_to_action_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_call_to_action_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_call_to_action_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_content_columns = pgTable(
  'studies_blocks_content_columns',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    width: enum_studies_blocks_content_columns_width('width').notNull().default('full'),
    alignment: enum_studies_blocks_content_columns_alignment('alignment').notNull().default('left'),
    content: jsonb('content').notNull(),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_content_columns_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_content_columns_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_content.id],
      name: 'studies_blocks_content_columns_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_content = pgTable(
  'studies_blocks_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_content_background_color('background_color').default('none'),
    accentLine: boolean('accent_line').default(false),
    accentLineAlignment:
      enum_studies_blocks_content_accent_line_alignment('accent_line_alignment').default('left'),
    paddingTop: enum_studies_blocks_content_padding_top('padding_top').default('medium'),
    paddingBottom: enum_studies_blocks_content_padding_bottom('padding_bottom').default('medium'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_content_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_content_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_cta_grid_actions = pgTable(
  'studies_blocks_cta_grid_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    headline: varchar('headline').notNull(),
    link_type: enum_studies_blocks_cta_grid_actions_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_cta_grid_actions_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_cta_grid_actions_parent_id_idx').on(columns._parentID),
    studies_blocks_cta_grid_actions_link_link_page_idx: index(
      'studies_blocks_cta_grid_actions_link_link_page_idx',
    ).on(columns.link_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_cta_grid.id],
      name: 'studies_blocks_cta_grid_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_cta_grid = pgTable(
  'studies_blocks_cta_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_cta_grid_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_cta_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_cta_grid_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_cta_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image = pgTable(
  'studies_blocks_image',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    type: enum_studies_blocks_image_type('type').default('normal'),
    caption: jsonb('caption'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_image_path_idx').on(columns._path),
    studies_blocks_image_image_idx: index('studies_blocks_image_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_image_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_collage_images = pgTable(
  'studies_blocks_image_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_collage_images_parent_id_idx').on(columns._parentID),
    studies_blocks_image_collage_images_image_idx: index(
      'studies_blocks_image_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_image_collage.id],
      name: 'studies_blocks_image_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_collage = pgTable(
  'studies_blocks_image_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_collage_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_image_collage_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_image_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_content_collage_images = pgTable(
  'studies_blocks_image_content_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_content_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_content_collage_images_parent_id_idx').on(
      columns._parentID,
    ),
    studies_blocks_image_content_collage_images_image_idx: index(
      'studies_blocks_image_content_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_image_content_collage.id],
      name: 'studies_blocks_image_content_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_content_collage = pgTable(
  'studies_blocks_image_content_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_image_content_collage_background_color('background_color').default(
        'none',
      ),
    content: jsonb('content').notNull(),
    enableCTA: boolean('enable_c_t_a'),
    link_type: enum_studies_blocks_image_content_collage_link_type('link_type').default('page'),
    link_label: varchar('link_label'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_content_collage_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_content_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_image_content_collage_path_idx').on(columns._path),
    studies_blocks_image_content_collage_link_link_page_idx: index(
      'studies_blocks_image_content_collage_link_link_page_idx',
    ).on(columns.link_page),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_image_content_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_grid_images = pgTable(
  'studies_blocks_image_grid_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    content: varchar('content'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_grid_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_grid_images_parent_id_idx').on(columns._parentID),
    studies_blocks_image_grid_images_image_idx: index(
      'studies_blocks_image_grid_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_image_grid.id],
      name: 'studies_blocks_image_grid_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_grid = pgTable(
  'studies_blocks_image_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_image_grid_background_color('background_color').default('none'),
    content: jsonb('content'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_grid_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_image_grid_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_image_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_stat_collage_stats = pgTable(
  'studies_blocks_image_stat_collage_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    stat: varchar('stat'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_stat_collage_stats_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_stat_collage_stats_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_image_stat_collage.id],
      name: 'studies_blocks_image_stat_collage_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_stat_collage_images = pgTable(
  'studies_blocks_image_stat_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_stat_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_stat_collage_images_parent_id_idx').on(
      columns._parentID,
    ),
    studies_blocks_image_stat_collage_images_image_idx: index(
      'studies_blocks_image_stat_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_image_stat_collage.id],
      name: 'studies_blocks_image_stat_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_image_stat_collage = pgTable(
  'studies_blocks_image_stat_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_image_stat_collage_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_image_stat_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_image_stat_collage_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_image_stat_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_slider_images = pgTable(
  'studies_blocks_slider_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_slider_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_slider_images_parent_id_idx').on(columns._parentID),
    studies_blocks_slider_images_image_idx: index('studies_blocks_slider_images_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_slider.id],
      name: 'studies_blocks_slider_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_slider = pgTable(
  'studies_blocks_slider',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_slider_background_color('background_color').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_slider_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_slider_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_slider_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_slider_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_spacer = pgTable(
  'studies_blocks_spacer',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    size: enum_studies_blocks_spacer_size('size').notNull().default('medium'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_spacer_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_spacer_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_spacer_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_spacer_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_statistics_stats = pgTable(
  'studies_blocks_statistics_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    stat: varchar('stat'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_statistics_stats_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_statistics_stats_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_statistics.id],
      name: 'studies_blocks_statistics_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_statistics = pgTable(
  'studies_blocks_statistics',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    topOverlap: enum_studies_blocks_statistics_top_overlap('top_overlap').default('none'),
    bottomOverlap: enum_studies_blocks_statistics_bottom_overlap('bottom_overlap').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_statistics_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_statistics_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_statistics_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_statistics_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_sticky_content_sections = pgTable(
  'studies_blocks_sticky_content_sections',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label').notNull(),
    description: varchar('description').notNull(),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_sticky_content_sections_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_sticky_content_sections_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies_blocks_sticky_content.id],
      name: 'studies_blocks_sticky_content_sections_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_sticky_content = pgTable(
  'studies_blocks_sticky_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_sticky_content_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_sticky_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_sticky_content_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_sticky_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_blocks_study_slider = pgTable(
  'studies_blocks_study_slider',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_studies_blocks_study_slider_background_color('background_color').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('studies_blocks_study_slider_order_idx').on(columns._order),
    _parentIDIdx: index('studies_blocks_study_slider_parent_id_idx').on(columns._parentID),
    _pathIdx: index('studies_blocks_study_slider_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_blocks_study_slider_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies_preview_images = pgTable(
  'studies_preview_images',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('studies_preview_images_order_idx').on(columns._order),
    _parentIDIdx: index('studies_preview_images_parent_id_idx').on(columns._parentID),
    studies_preview_images_image_idx: index('studies_preview_images_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [studies.id],
      name: 'studies_preview_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const studies = pgTable(
  'studies',
  {
    id: serial('id').primaryKey(),
    title: varchar('title').notNull(),
    featuredImage: integer('featured_image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    client: varchar('client'),
    location: varchar('location'),
    slug: varchar('slug'),
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_keywords: varchar('meta_keywords'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    studies_featured_image_idx: index('studies_featured_image_idx').on(columns.featuredImage),
    studies_updated_at_idx: index('studies_updated_at_idx').on(columns.updatedAt),
    studies_created_at_idx: index('studies_created_at_idx').on(columns.createdAt),
  }),
)

export const studies_rels = pgTable(
  'studies_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    studiesID: integer('studies_id'),
    categoriesID: integer('categories_id'),
  },
  (columns) => ({
    order: index('studies_rels_order_idx').on(columns.order),
    parentIdx: index('studies_rels_parent_idx').on(columns.parent),
    pathIdx: index('studies_rels_path_idx').on(columns.path),
    studies_rels_studies_id_idx: index('studies_rels_studies_id_idx').on(columns.studiesID),
    studies_rels_categories_id_idx: index('studies_rels_categories_id_idx').on(
      columns.categoriesID,
    ),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [studies.id],
      name: 'studies_rels_parent_fk',
    }).onDelete('cascade'),
    studiesIdFk: foreignKey({
      columns: [columns['studiesID']],
      foreignColumns: [studies.id],
      name: 'studies_rels_studies_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'studies_rels_categories_fk',
    }).onDelete('cascade'),
  }),
)

export const categories = pgTable(
  'categories',
  {
    id: serial('id').primaryKey(),
    title: varchar('title').notNull(),
    slug: varchar('slug'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    categories_updated_at_idx: index('categories_updated_at_idx').on(columns.updatedAt),
    categories_created_at_idx: index('categories_created_at_idx').on(columns.createdAt),
  }),
)

export const pages_blocks_call_to_action_actions = pgTable(
  'pages_blocks_call_to_action_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    link_type: enum_pages_blocks_call_to_action_actions_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_call_to_action_actions_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_call_to_action_actions_parent_id_idx').on(columns._parentID),
    pages_blocks_call_to_action_actions_link_link_page_idx: index(
      'pages_blocks_call_to_action_actions_link_link_page_idx',
    ).on(columns.link_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_call_to_action.id],
      name: 'pages_blocks_call_to_action_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_call_to_action = pgTable(
  'pages_blocks_call_to_action',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_pages_blocks_call_to_action_background_color('background_color').default('none'),
    content: jsonb('content').notNull(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_call_to_action_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_call_to_action_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_call_to_action_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_call_to_action_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_columns = pgTable(
  'pages_blocks_content_columns',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    width: enum_pages_blocks_content_columns_width('width').notNull().default('full'),
    alignment: enum_pages_blocks_content_columns_alignment('alignment').notNull().default('left'),
    content: jsonb('content').notNull(),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_columns_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_columns_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_content.id],
      name: 'pages_blocks_content_columns_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content = pgTable(
  'pages_blocks_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor: enum_pages_blocks_content_background_color('background_color').default('none'),
    accentLine: boolean('accent_line').default(false),
    accentLineAlignment:
      enum_pages_blocks_content_accent_line_alignment('accent_line_alignment').default('left'),
    paddingTop: enum_pages_blocks_content_padding_top('padding_top').default('medium'),
    paddingBottom: enum_pages_blocks_content_padding_bottom('padding_bottom').default('medium'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_content_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_cta_grid_actions = pgTable(
  'pages_blocks_cta_grid_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    headline: varchar('headline').notNull(),
    link_type: enum_pages_blocks_cta_grid_actions_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_cta_grid_actions_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_cta_grid_actions_parent_id_idx').on(columns._parentID),
    pages_blocks_cta_grid_actions_link_link_page_idx: index(
      'pages_blocks_cta_grid_actions_link_link_page_idx',
    ).on(columns.link_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_cta_grid.id],
      name: 'pages_blocks_cta_grid_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_cta_grid = pgTable(
  'pages_blocks_cta_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_cta_grid_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_cta_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_cta_grid_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_cta_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image = pgTable(
  'pages_blocks_image',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    type: enum_pages_blocks_image_type('type').default('normal'),
    caption: jsonb('caption'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_path_idx').on(columns._path),
    pages_blocks_image_image_idx: index('pages_blocks_image_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_collage_images = pgTable(
  'pages_blocks_image_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_collage_images_parent_id_idx').on(columns._parentID),
    pages_blocks_image_collage_images_image_idx: index(
      'pages_blocks_image_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_collage.id],
      name: 'pages_blocks_image_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_collage = pgTable(
  'pages_blocks_image_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_collage_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_collage_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_content_collage_images = pgTable(
  'pages_blocks_image_content_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_content_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_content_collage_images_parent_id_idx').on(
      columns._parentID,
    ),
    pages_blocks_image_content_collage_images_image_idx: index(
      'pages_blocks_image_content_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_content_collage.id],
      name: 'pages_blocks_image_content_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_content_collage = pgTable(
  'pages_blocks_image_content_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_pages_blocks_image_content_collage_background_color('background_color').default('none'),
    content: jsonb('content').notNull(),
    enableCTA: boolean('enable_c_t_a'),
    link_type: enum_pages_blocks_image_content_collage_link_type('link_type').default('page'),
    link_label: varchar('link_label'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_content_collage_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_content_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_content_collage_path_idx').on(columns._path),
    pages_blocks_image_content_collage_link_link_page_idx: index(
      'pages_blocks_image_content_collage_link_link_page_idx',
    ).on(columns.link_page),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_content_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_grid_images = pgTable(
  'pages_blocks_image_grid_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    content: varchar('content'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_grid_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_grid_images_parent_id_idx').on(columns._parentID),
    pages_blocks_image_grid_images_image_idx: index('pages_blocks_image_grid_images_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_grid.id],
      name: 'pages_blocks_image_grid_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_grid = pgTable(
  'pages_blocks_image_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_pages_blocks_image_grid_background_color('background_color').default('none'),
    content: jsonb('content'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_grid_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_grid_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_stat_collage_stats = pgTable(
  'pages_blocks_image_stat_collage_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    stat: varchar('stat'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_stat_collage_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_stat_collage_stats_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_stat_collage.id],
      name: 'pages_blocks_image_stat_collage_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_stat_collage_images = pgTable(
  'pages_blocks_image_stat_collage_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_stat_collage_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_stat_collage_images_parent_id_idx').on(
      columns._parentID,
    ),
    pages_blocks_image_stat_collage_images_image_idx: index(
      'pages_blocks_image_stat_collage_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_stat_collage.id],
      name: 'pages_blocks_image_stat_collage_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_stat_collage = pgTable(
  'pages_blocks_image_stat_collage',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_stat_collage_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_stat_collage_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_stat_collage_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_stat_collage_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_slider_images = pgTable(
  'pages_blocks_slider_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_slider_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_slider_images_parent_id_idx').on(columns._parentID),
    pages_blocks_slider_images_image_idx: index('pages_blocks_slider_images_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_slider.id],
      name: 'pages_blocks_slider_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_slider = pgTable(
  'pages_blocks_slider',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor: enum_pages_blocks_slider_background_color('background_color').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_slider_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_slider_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_slider_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_slider_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_spacer = pgTable(
  'pages_blocks_spacer',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    size: enum_pages_blocks_spacer_size('size').notNull().default('medium'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_spacer_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_spacer_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_spacer_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_spacer_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_statistics_stats = pgTable(
  'pages_blocks_statistics_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    stat: varchar('stat'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_statistics_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_statistics_stats_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_statistics.id],
      name: 'pages_blocks_statistics_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_statistics = pgTable(
  'pages_blocks_statistics',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    topOverlap: enum_pages_blocks_statistics_top_overlap('top_overlap').default('none'),
    bottomOverlap: enum_pages_blocks_statistics_bottom_overlap('bottom_overlap').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_statistics_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_statistics_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_statistics_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_statistics_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_sticky_content_sections = pgTable(
  'pages_blocks_sticky_content_sections',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label').notNull(),
    description: varchar('description').notNull(),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_sticky_content_sections_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_sticky_content_sections_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_sticky_content.id],
      name: 'pages_blocks_sticky_content_sections_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_sticky_content = pgTable(
  'pages_blocks_sticky_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_sticky_content_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_sticky_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_sticky_content_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_sticky_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_study_slider = pgTable(
  'pages_blocks_study_slider',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    backgroundColor:
      enum_pages_blocks_study_slider_background_color('background_color').default('none'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_study_slider_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_study_slider_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_study_slider_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_study_slider_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages = pgTable(
  'pages',
  {
    id: serial('id').primaryKey(),
    title: varchar('title').notNull(),
    heroType: enum_pages_hero_type('hero_type').notNull().default('minimal'),
    heroContent: jsonb('hero_content').notNull(),
    heroImage: integer('hero_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_keywords: varchar('meta_keywords'),
    slug: varchar('slug'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    pages_hero_image_idx: index('pages_hero_image_idx').on(columns.heroImage),
    pages_updated_at_idx: index('pages_updated_at_idx').on(columns.updatedAt),
    pages_created_at_idx: index('pages_created_at_idx').on(columns.createdAt),
  }),
)

export const pages_rels = pgTable(
  'pages_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    studiesID: integer('studies_id'),
  },
  (columns) => ({
    order: index('pages_rels_order_idx').on(columns.order),
    parentIdx: index('pages_rels_parent_idx').on(columns.parent),
    pathIdx: index('pages_rels_path_idx').on(columns.path),
    pages_rels_studies_id_idx: index('pages_rels_studies_id_idx').on(columns.studiesID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [pages.id],
      name: 'pages_rels_parent_fk',
    }).onDelete('cascade'),
    studiesIdFk: foreignKey({
      columns: [columns['studiesID']],
      foreignColumns: [studies.id],
      name: 'pages_rels_studies_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_locked_documents = pgTable(
  'payload_locked_documents',
  {
    id: serial('id').primaryKey(),
    globalSlug: varchar('global_slug'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_locked_documents_global_slug_idx: index('payload_locked_documents_global_slug_idx').on(
      columns.globalSlug,
    ),
    payload_locked_documents_updated_at_idx: index('payload_locked_documents_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_locked_documents_created_at_idx: index('payload_locked_documents_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const payload_locked_documents_rels = pgTable(
  'payload_locked_documents_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    usersID: integer('users_id'),
    mediaID: integer('media_id'),
    'form-submissionsID': integer('form_submissions_id'),
    studiesID: integer('studies_id'),
    categoriesID: integer('categories_id'),
    pagesID: integer('pages_id'),
  },
  (columns) => ({
    order: index('payload_locked_documents_rels_order_idx').on(columns.order),
    parentIdx: index('payload_locked_documents_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_locked_documents_rels_path_idx').on(columns.path),
    payload_locked_documents_rels_users_id_idx: index(
      'payload_locked_documents_rels_users_id_idx',
    ).on(columns.usersID),
    payload_locked_documents_rels_media_id_idx: index(
      'payload_locked_documents_rels_media_id_idx',
    ).on(columns.mediaID),
    payload_locked_documents_rels_form_submissions_id_idx: index(
      'payload_locked_documents_rels_form_submissions_id_idx',
    ).on(columns['form-submissionsID']),
    payload_locked_documents_rels_studies_id_idx: index(
      'payload_locked_documents_rels_studies_id_idx',
    ).on(columns.studiesID),
    payload_locked_documents_rels_categories_id_idx: index(
      'payload_locked_documents_rels_categories_id_idx',
    ).on(columns.categoriesID),
    payload_locked_documents_rels_pages_id_idx: index(
      'payload_locked_documents_rels_pages_id_idx',
    ).on(columns.pagesID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_locked_documents.id],
      name: 'payload_locked_documents_rels_parent_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_locked_documents_rels_users_fk',
    }).onDelete('cascade'),
    mediaIdFk: foreignKey({
      columns: [columns['mediaID']],
      foreignColumns: [media.id],
      name: 'payload_locked_documents_rels_media_fk',
    }).onDelete('cascade'),
    'form-submissionsIdFk': foreignKey({
      columns: [columns['form-submissionsID']],
      foreignColumns: [form_submissions.id],
      name: 'payload_locked_documents_rels_form_submissions_fk',
    }).onDelete('cascade'),
    studiesIdFk: foreignKey({
      columns: [columns['studiesID']],
      foreignColumns: [studies.id],
      name: 'payload_locked_documents_rels_studies_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'payload_locked_documents_rels_categories_fk',
    }).onDelete('cascade'),
    pagesIdFk: foreignKey({
      columns: [columns['pagesID']],
      foreignColumns: [pages.id],
      name: 'payload_locked_documents_rels_pages_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_preferences = pgTable(
  'payload_preferences',
  {
    id: serial('id').primaryKey(),
    key: varchar('key'),
    value: jsonb('value'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_preferences_key_idx: index('payload_preferences_key_idx').on(columns.key),
    payload_preferences_updated_at_idx: index('payload_preferences_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_preferences_created_at_idx: index('payload_preferences_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const payload_preferences_rels = pgTable(
  'payload_preferences_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    usersID: integer('users_id'),
  },
  (columns) => ({
    order: index('payload_preferences_rels_order_idx').on(columns.order),
    parentIdx: index('payload_preferences_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_preferences_rels_path_idx').on(columns.path),
    payload_preferences_rels_users_id_idx: index('payload_preferences_rels_users_id_idx').on(
      columns.usersID,
    ),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_preferences.id],
      name: 'payload_preferences_rels_parent_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_preferences_rels_users_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_migrations = pgTable(
  'payload_migrations',
  {
    id: serial('id').primaryKey(),
    name: varchar('name'),
    batch: numeric('batch'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_migrations_updated_at_idx: index('payload_migrations_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_migrations_created_at_idx: index('payload_migrations_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const mega_menu_nav = pgTable(
  'mega_menu_nav',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    link_type: enum_mega_menu_nav_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('mega_menu_nav_order_idx').on(columns._order),
    _parentIDIdx: index('mega_menu_nav_parent_id_idx').on(columns._parentID),
    mega_menu_nav_link_link_page_idx: index('mega_menu_nav_link_link_page_idx').on(
      columns.link_page,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [mega_menu.id],
      name: 'mega_menu_nav_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const mega_menu = pgTable('mega_menu', {
  id: serial('id').primaryKey(),
  updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
  createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
})

export const social_media_links = pgTable(
  'social_media_links',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label').notNull(),
    url: varchar('url').notNull(),
  },
  (columns) => ({
    _orderIdx: index('social_media_links_order_idx').on(columns._order),
    _parentIDIdx: index('social_media_links_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [social_media.id],
      name: 'social_media_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const social_media = pgTable('social_media', {
  id: serial('id').primaryKey(),
  updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
  createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
})

export const footer_nav = pgTable(
  'footer_nav',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    link_type: enum_footer_nav_link_type('link_type').default('page'),
    link_label: varchar('link_label').notNull(),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
  },
  (columns) => ({
    _orderIdx: index('footer_nav_order_idx').on(columns._order),
    _parentIDIdx: index('footer_nav_parent_id_idx').on(columns._parentID),
    footer_nav_link_link_page_idx: index('footer_nav_link_link_page_idx').on(columns.link_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer.id],
      name: 'footer_nav_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer = pgTable('footer', {
  id: serial('id').primaryKey(),
  updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
  createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
})

export const relations_users = relations(users, () => ({}))
export const relations_media = relations(media, () => ({}))
export const relations_form_submissions = relations(form_submissions, () => ({}))
export const relations_studies_blocks_call_to_action_actions = relations(
  studies_blocks_call_to_action_actions,
  ({ one }) => ({
    _parentID: one(studies_blocks_call_to_action, {
      fields: [studies_blocks_call_to_action_actions._parentID],
      references: [studies_blocks_call_to_action.id],
      relationName: 'actions',
    }),
    link_page: one(pages, {
      fields: [studies_blocks_call_to_action_actions.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
  }),
)
export const relations_studies_blocks_call_to_action = relations(
  studies_blocks_call_to_action,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_call_to_action._parentID],
      references: [studies.id],
      relationName: '_blocks_call-to-action',
    }),
    actions: many(studies_blocks_call_to_action_actions, {
      relationName: 'actions',
    }),
  }),
)
export const relations_studies_blocks_content_columns = relations(
  studies_blocks_content_columns,
  ({ one }) => ({
    _parentID: one(studies_blocks_content, {
      fields: [studies_blocks_content_columns._parentID],
      references: [studies_blocks_content.id],
      relationName: 'columns',
    }),
  }),
)
export const relations_studies_blocks_content = relations(
  studies_blocks_content,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_content._parentID],
      references: [studies.id],
      relationName: '_blocks_content',
    }),
    columns: many(studies_blocks_content_columns, {
      relationName: 'columns',
    }),
  }),
)
export const relations_studies_blocks_cta_grid_actions = relations(
  studies_blocks_cta_grid_actions,
  ({ one }) => ({
    _parentID: one(studies_blocks_cta_grid, {
      fields: [studies_blocks_cta_grid_actions._parentID],
      references: [studies_blocks_cta_grid.id],
      relationName: 'actions',
    }),
    link_page: one(pages, {
      fields: [studies_blocks_cta_grid_actions.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
  }),
)
export const relations_studies_blocks_cta_grid = relations(
  studies_blocks_cta_grid,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_cta_grid._parentID],
      references: [studies.id],
      relationName: '_blocks_cta-grid',
    }),
    actions: many(studies_blocks_cta_grid_actions, {
      relationName: 'actions',
    }),
  }),
)
export const relations_studies_blocks_image = relations(studies_blocks_image, ({ one }) => ({
  _parentID: one(studies, {
    fields: [studies_blocks_image._parentID],
    references: [studies.id],
    relationName: '_blocks_image',
  }),
  image: one(media, {
    fields: [studies_blocks_image.image],
    references: [media.id],
    relationName: 'image',
  }),
}))
export const relations_studies_blocks_image_collage_images = relations(
  studies_blocks_image_collage_images,
  ({ one }) => ({
    _parentID: one(studies_blocks_image_collage, {
      fields: [studies_blocks_image_collage_images._parentID],
      references: [studies_blocks_image_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [studies_blocks_image_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_studies_blocks_image_collage = relations(
  studies_blocks_image_collage,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_image_collage._parentID],
      references: [studies.id],
      relationName: '_blocks_image-collage',
    }),
    images: many(studies_blocks_image_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_studies_blocks_image_content_collage_images = relations(
  studies_blocks_image_content_collage_images,
  ({ one }) => ({
    _parentID: one(studies_blocks_image_content_collage, {
      fields: [studies_blocks_image_content_collage_images._parentID],
      references: [studies_blocks_image_content_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [studies_blocks_image_content_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_studies_blocks_image_content_collage = relations(
  studies_blocks_image_content_collage,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_image_content_collage._parentID],
      references: [studies.id],
      relationName: '_blocks_image-content-collage',
    }),
    link_page: one(pages, {
      fields: [studies_blocks_image_content_collage.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    images: many(studies_blocks_image_content_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_studies_blocks_image_grid_images = relations(
  studies_blocks_image_grid_images,
  ({ one }) => ({
    _parentID: one(studies_blocks_image_grid, {
      fields: [studies_blocks_image_grid_images._parentID],
      references: [studies_blocks_image_grid.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [studies_blocks_image_grid_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_studies_blocks_image_grid = relations(
  studies_blocks_image_grid,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_image_grid._parentID],
      references: [studies.id],
      relationName: '_blocks_image-grid',
    }),
    images: many(studies_blocks_image_grid_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_studies_blocks_image_stat_collage_stats = relations(
  studies_blocks_image_stat_collage_stats,
  ({ one }) => ({
    _parentID: one(studies_blocks_image_stat_collage, {
      fields: [studies_blocks_image_stat_collage_stats._parentID],
      references: [studies_blocks_image_stat_collage.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_studies_blocks_image_stat_collage_images = relations(
  studies_blocks_image_stat_collage_images,
  ({ one }) => ({
    _parentID: one(studies_blocks_image_stat_collage, {
      fields: [studies_blocks_image_stat_collage_images._parentID],
      references: [studies_blocks_image_stat_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [studies_blocks_image_stat_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_studies_blocks_image_stat_collage = relations(
  studies_blocks_image_stat_collage,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_image_stat_collage._parentID],
      references: [studies.id],
      relationName: '_blocks_image-stat-collage',
    }),
    stats: many(studies_blocks_image_stat_collage_stats, {
      relationName: 'stats',
    }),
    images: many(studies_blocks_image_stat_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_studies_blocks_slider_images = relations(
  studies_blocks_slider_images,
  ({ one }) => ({
    _parentID: one(studies_blocks_slider, {
      fields: [studies_blocks_slider_images._parentID],
      references: [studies_blocks_slider.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [studies_blocks_slider_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_studies_blocks_slider = relations(
  studies_blocks_slider,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_slider._parentID],
      references: [studies.id],
      relationName: '_blocks_slider',
    }),
    images: many(studies_blocks_slider_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_studies_blocks_spacer = relations(studies_blocks_spacer, ({ one }) => ({
  _parentID: one(studies, {
    fields: [studies_blocks_spacer._parentID],
    references: [studies.id],
    relationName: '_blocks_spacer',
  }),
}))
export const relations_studies_blocks_statistics_stats = relations(
  studies_blocks_statistics_stats,
  ({ one }) => ({
    _parentID: one(studies_blocks_statistics, {
      fields: [studies_blocks_statistics_stats._parentID],
      references: [studies_blocks_statistics.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_studies_blocks_statistics = relations(
  studies_blocks_statistics,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_statistics._parentID],
      references: [studies.id],
      relationName: '_blocks_statistics',
    }),
    stats: many(studies_blocks_statistics_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations_studies_blocks_sticky_content_sections = relations(
  studies_blocks_sticky_content_sections,
  ({ one }) => ({
    _parentID: one(studies_blocks_sticky_content, {
      fields: [studies_blocks_sticky_content_sections._parentID],
      references: [studies_blocks_sticky_content.id],
      relationName: 'sections',
    }),
  }),
)
export const relations_studies_blocks_sticky_content = relations(
  studies_blocks_sticky_content,
  ({ one, many }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_sticky_content._parentID],
      references: [studies.id],
      relationName: '_blocks_sticky-content',
    }),
    sections: many(studies_blocks_sticky_content_sections, {
      relationName: 'sections',
    }),
  }),
)
export const relations_studies_blocks_study_slider = relations(
  studies_blocks_study_slider,
  ({ one }) => ({
    _parentID: one(studies, {
      fields: [studies_blocks_study_slider._parentID],
      references: [studies.id],
      relationName: '_blocks_study-slider',
    }),
  }),
)
export const relations_studies_preview_images = relations(studies_preview_images, ({ one }) => ({
  _parentID: one(studies, {
    fields: [studies_preview_images._parentID],
    references: [studies.id],
    relationName: 'previewImages',
  }),
  image: one(media, {
    fields: [studies_preview_images.image],
    references: [media.id],
    relationName: 'image',
  }),
}))
export const relations_studies_rels = relations(studies_rels, ({ one }) => ({
  parent: one(studies, {
    fields: [studies_rels.parent],
    references: [studies.id],
    relationName: '_rels',
  }),
  studiesID: one(studies, {
    fields: [studies_rels.studiesID],
    references: [studies.id],
    relationName: 'studies',
  }),
  categoriesID: one(categories, {
    fields: [studies_rels.categoriesID],
    references: [categories.id],
    relationName: 'categories',
  }),
}))
export const relations_studies = relations(studies, ({ one, many }) => ({
  featuredImage: one(media, {
    fields: [studies.featuredImage],
    references: [media.id],
    relationName: 'featuredImage',
  }),
  '_blocks_call-to-action': many(studies_blocks_call_to_action, {
    relationName: '_blocks_call-to-action',
  }),
  _blocks_content: many(studies_blocks_content, {
    relationName: '_blocks_content',
  }),
  '_blocks_cta-grid': many(studies_blocks_cta_grid, {
    relationName: '_blocks_cta-grid',
  }),
  _blocks_image: many(studies_blocks_image, {
    relationName: '_blocks_image',
  }),
  '_blocks_image-collage': many(studies_blocks_image_collage, {
    relationName: '_blocks_image-collage',
  }),
  '_blocks_image-content-collage': many(studies_blocks_image_content_collage, {
    relationName: '_blocks_image-content-collage',
  }),
  '_blocks_image-grid': many(studies_blocks_image_grid, {
    relationName: '_blocks_image-grid',
  }),
  '_blocks_image-stat-collage': many(studies_blocks_image_stat_collage, {
    relationName: '_blocks_image-stat-collage',
  }),
  _blocks_slider: many(studies_blocks_slider, {
    relationName: '_blocks_slider',
  }),
  _blocks_spacer: many(studies_blocks_spacer, {
    relationName: '_blocks_spacer',
  }),
  _blocks_statistics: many(studies_blocks_statistics, {
    relationName: '_blocks_statistics',
  }),
  '_blocks_sticky-content': many(studies_blocks_sticky_content, {
    relationName: '_blocks_sticky-content',
  }),
  '_blocks_study-slider': many(studies_blocks_study_slider, {
    relationName: '_blocks_study-slider',
  }),
  previewImages: many(studies_preview_images, {
    relationName: 'previewImages',
  }),
  _rels: many(studies_rels, {
    relationName: '_rels',
  }),
}))
export const relations_categories = relations(categories, () => ({}))
export const relations_pages_blocks_call_to_action_actions = relations(
  pages_blocks_call_to_action_actions,
  ({ one }) => ({
    _parentID: one(pages_blocks_call_to_action, {
      fields: [pages_blocks_call_to_action_actions._parentID],
      references: [pages_blocks_call_to_action.id],
      relationName: 'actions',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_call_to_action_actions.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
  }),
)
export const relations_pages_blocks_call_to_action = relations(
  pages_blocks_call_to_action,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_call_to_action._parentID],
      references: [pages.id],
      relationName: '_blocks_call-to-action',
    }),
    actions: many(pages_blocks_call_to_action_actions, {
      relationName: 'actions',
    }),
  }),
)
export const relations_pages_blocks_content_columns = relations(
  pages_blocks_content_columns,
  ({ one }) => ({
    _parentID: one(pages_blocks_content, {
      fields: [pages_blocks_content_columns._parentID],
      references: [pages_blocks_content.id],
      relationName: 'columns',
    }),
  }),
)
export const relations_pages_blocks_content = relations(pages_blocks_content, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_content._parentID],
    references: [pages.id],
    relationName: '_blocks_content',
  }),
  columns: many(pages_blocks_content_columns, {
    relationName: 'columns',
  }),
}))
export const relations_pages_blocks_cta_grid_actions = relations(
  pages_blocks_cta_grid_actions,
  ({ one }) => ({
    _parentID: one(pages_blocks_cta_grid, {
      fields: [pages_blocks_cta_grid_actions._parentID],
      references: [pages_blocks_cta_grid.id],
      relationName: 'actions',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_cta_grid_actions.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
  }),
)
export const relations_pages_blocks_cta_grid = relations(
  pages_blocks_cta_grid,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_cta_grid._parentID],
      references: [pages.id],
      relationName: '_blocks_cta-grid',
    }),
    actions: many(pages_blocks_cta_grid_actions, {
      relationName: 'actions',
    }),
  }),
)
export const relations_pages_blocks_image = relations(pages_blocks_image, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_image._parentID],
    references: [pages.id],
    relationName: '_blocks_image',
  }),
  image: one(media, {
    fields: [pages_blocks_image.image],
    references: [media.id],
    relationName: 'image',
  }),
}))
export const relations_pages_blocks_image_collage_images = relations(
  pages_blocks_image_collage_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_collage, {
      fields: [pages_blocks_image_collage_images._parentID],
      references: [pages_blocks_image_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_image_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_image_collage = relations(
  pages_blocks_image_collage,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_image_collage._parentID],
      references: [pages.id],
      relationName: '_blocks_image-collage',
    }),
    images: many(pages_blocks_image_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_pages_blocks_image_content_collage_images = relations(
  pages_blocks_image_content_collage_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_content_collage, {
      fields: [pages_blocks_image_content_collage_images._parentID],
      references: [pages_blocks_image_content_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_image_content_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_image_content_collage = relations(
  pages_blocks_image_content_collage,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_image_content_collage._parentID],
      references: [pages.id],
      relationName: '_blocks_image-content-collage',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_image_content_collage.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    images: many(pages_blocks_image_content_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_pages_blocks_image_grid_images = relations(
  pages_blocks_image_grid_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_grid, {
      fields: [pages_blocks_image_grid_images._parentID],
      references: [pages_blocks_image_grid.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_image_grid_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_image_grid = relations(
  pages_blocks_image_grid,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_image_grid._parentID],
      references: [pages.id],
      relationName: '_blocks_image-grid',
    }),
    images: many(pages_blocks_image_grid_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_pages_blocks_image_stat_collage_stats = relations(
  pages_blocks_image_stat_collage_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_stat_collage, {
      fields: [pages_blocks_image_stat_collage_stats._parentID],
      references: [pages_blocks_image_stat_collage.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_image_stat_collage_images = relations(
  pages_blocks_image_stat_collage_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_stat_collage, {
      fields: [pages_blocks_image_stat_collage_images._parentID],
      references: [pages_blocks_image_stat_collage.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_image_stat_collage_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_image_stat_collage = relations(
  pages_blocks_image_stat_collage,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_image_stat_collage._parentID],
      references: [pages.id],
      relationName: '_blocks_image-stat-collage',
    }),
    stats: many(pages_blocks_image_stat_collage_stats, {
      relationName: 'stats',
    }),
    images: many(pages_blocks_image_stat_collage_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_pages_blocks_slider_images = relations(
  pages_blocks_slider_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_slider, {
      fields: [pages_blocks_slider_images._parentID],
      references: [pages_blocks_slider.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_slider_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_slider = relations(pages_blocks_slider, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_slider._parentID],
    references: [pages.id],
    relationName: '_blocks_slider',
  }),
  images: many(pages_blocks_slider_images, {
    relationName: 'images',
  }),
}))
export const relations_pages_blocks_spacer = relations(pages_blocks_spacer, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_spacer._parentID],
    references: [pages.id],
    relationName: '_blocks_spacer',
  }),
}))
export const relations_pages_blocks_statistics_stats = relations(
  pages_blocks_statistics_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_statistics, {
      fields: [pages_blocks_statistics_stats._parentID],
      references: [pages_blocks_statistics.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_statistics = relations(
  pages_blocks_statistics,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_statistics._parentID],
      references: [pages.id],
      relationName: '_blocks_statistics',
    }),
    stats: many(pages_blocks_statistics_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_sticky_content_sections = relations(
  pages_blocks_sticky_content_sections,
  ({ one }) => ({
    _parentID: one(pages_blocks_sticky_content, {
      fields: [pages_blocks_sticky_content_sections._parentID],
      references: [pages_blocks_sticky_content.id],
      relationName: 'sections',
    }),
  }),
)
export const relations_pages_blocks_sticky_content = relations(
  pages_blocks_sticky_content,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_sticky_content._parentID],
      references: [pages.id],
      relationName: '_blocks_sticky-content',
    }),
    sections: many(pages_blocks_sticky_content_sections, {
      relationName: 'sections',
    }),
  }),
)
export const relations_pages_blocks_study_slider = relations(
  pages_blocks_study_slider,
  ({ one }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_study_slider._parentID],
      references: [pages.id],
      relationName: '_blocks_study-slider',
    }),
  }),
)
export const relations_pages_rels = relations(pages_rels, ({ one }) => ({
  parent: one(pages, {
    fields: [pages_rels.parent],
    references: [pages.id],
    relationName: '_rels',
  }),
  studiesID: one(studies, {
    fields: [pages_rels.studiesID],
    references: [studies.id],
    relationName: 'studies',
  }),
}))
export const relations_pages = relations(pages, ({ one, many }) => ({
  heroImage: one(media, {
    fields: [pages.heroImage],
    references: [media.id],
    relationName: 'heroImage',
  }),
  '_blocks_call-to-action': many(pages_blocks_call_to_action, {
    relationName: '_blocks_call-to-action',
  }),
  _blocks_content: many(pages_blocks_content, {
    relationName: '_blocks_content',
  }),
  '_blocks_cta-grid': many(pages_blocks_cta_grid, {
    relationName: '_blocks_cta-grid',
  }),
  _blocks_image: many(pages_blocks_image, {
    relationName: '_blocks_image',
  }),
  '_blocks_image-collage': many(pages_blocks_image_collage, {
    relationName: '_blocks_image-collage',
  }),
  '_blocks_image-content-collage': many(pages_blocks_image_content_collage, {
    relationName: '_blocks_image-content-collage',
  }),
  '_blocks_image-grid': many(pages_blocks_image_grid, {
    relationName: '_blocks_image-grid',
  }),
  '_blocks_image-stat-collage': many(pages_blocks_image_stat_collage, {
    relationName: '_blocks_image-stat-collage',
  }),
  _blocks_slider: many(pages_blocks_slider, {
    relationName: '_blocks_slider',
  }),
  _blocks_spacer: many(pages_blocks_spacer, {
    relationName: '_blocks_spacer',
  }),
  _blocks_statistics: many(pages_blocks_statistics, {
    relationName: '_blocks_statistics',
  }),
  '_blocks_sticky-content': many(pages_blocks_sticky_content, {
    relationName: '_blocks_sticky-content',
  }),
  '_blocks_study-slider': many(pages_blocks_study_slider, {
    relationName: '_blocks_study-slider',
  }),
  _rels: many(pages_rels, {
    relationName: '_rels',
  }),
}))
export const relations_payload_locked_documents_rels = relations(
  payload_locked_documents_rels,
  ({ one }) => ({
    parent: one(payload_locked_documents, {
      fields: [payload_locked_documents_rels.parent],
      references: [payload_locked_documents.id],
      relationName: '_rels',
    }),
    usersID: one(users, {
      fields: [payload_locked_documents_rels.usersID],
      references: [users.id],
      relationName: 'users',
    }),
    mediaID: one(media, {
      fields: [payload_locked_documents_rels.mediaID],
      references: [media.id],
      relationName: 'media',
    }),
    'form-submissionsID': one(form_submissions, {
      fields: [payload_locked_documents_rels['form-submissionsID']],
      references: [form_submissions.id],
      relationName: 'form-submissions',
    }),
    studiesID: one(studies, {
      fields: [payload_locked_documents_rels.studiesID],
      references: [studies.id],
      relationName: 'studies',
    }),
    categoriesID: one(categories, {
      fields: [payload_locked_documents_rels.categoriesID],
      references: [categories.id],
      relationName: 'categories',
    }),
    pagesID: one(pages, {
      fields: [payload_locked_documents_rels.pagesID],
      references: [pages.id],
      relationName: 'pages',
    }),
  }),
)
export const relations_payload_locked_documents = relations(
  payload_locked_documents,
  ({ many }) => ({
    _rels: many(payload_locked_documents_rels, {
      relationName: '_rels',
    }),
  }),
)
export const relations_payload_preferences_rels = relations(
  payload_preferences_rels,
  ({ one }) => ({
    parent: one(payload_preferences, {
      fields: [payload_preferences_rels.parent],
      references: [payload_preferences.id],
      relationName: '_rels',
    }),
    usersID: one(users, {
      fields: [payload_preferences_rels.usersID],
      references: [users.id],
      relationName: 'users',
    }),
  }),
)
export const relations_payload_preferences = relations(payload_preferences, ({ many }) => ({
  _rels: many(payload_preferences_rels, {
    relationName: '_rels',
  }),
}))
export const relations_payload_migrations = relations(payload_migrations, () => ({}))
export const relations_mega_menu_nav = relations(mega_menu_nav, ({ one }) => ({
  _parentID: one(mega_menu, {
    fields: [mega_menu_nav._parentID],
    references: [mega_menu.id],
    relationName: 'nav',
  }),
  link_page: one(pages, {
    fields: [mega_menu_nav.link_page],
    references: [pages.id],
    relationName: 'link_page',
  }),
}))
export const relations_mega_menu = relations(mega_menu, ({ many }) => ({
  nav: many(mega_menu_nav, {
    relationName: 'nav',
  }),
}))
export const relations_social_media_links = relations(social_media_links, ({ one }) => ({
  _parentID: one(social_media, {
    fields: [social_media_links._parentID],
    references: [social_media.id],
    relationName: 'links',
  }),
}))
export const relations_social_media = relations(social_media, ({ many }) => ({
  links: many(social_media_links, {
    relationName: 'links',
  }),
}))
export const relations_footer_nav = relations(footer_nav, ({ one }) => ({
  _parentID: one(footer, {
    fields: [footer_nav._parentID],
    references: [footer.id],
    relationName: 'nav',
  }),
  link_page: one(pages, {
    fields: [footer_nav.link_page],
    references: [pages.id],
    relationName: 'link_page',
  }),
}))
export const relations_footer = relations(footer, ({ many }) => ({
  nav: many(footer_nav, {
    relationName: 'nav',
  }),
}))

type DatabaseSchema = {
  enum_studies_blocks_call_to_action_actions_link_type: typeof enum_studies_blocks_call_to_action_actions_link_type
  enum_studies_blocks_call_to_action_background_color: typeof enum_studies_blocks_call_to_action_background_color
  enum_studies_blocks_content_columns_width: typeof enum_studies_blocks_content_columns_width
  enum_studies_blocks_content_columns_alignment: typeof enum_studies_blocks_content_columns_alignment
  enum_studies_blocks_content_background_color: typeof enum_studies_blocks_content_background_color
  enum_studies_blocks_content_accent_line_alignment: typeof enum_studies_blocks_content_accent_line_alignment
  enum_studies_blocks_content_padding_top: typeof enum_studies_blocks_content_padding_top
  enum_studies_blocks_content_padding_bottom: typeof enum_studies_blocks_content_padding_bottom
  enum_studies_blocks_cta_grid_actions_link_type: typeof enum_studies_blocks_cta_grid_actions_link_type
  enum_studies_blocks_image_type: typeof enum_studies_blocks_image_type
  enum_studies_blocks_image_content_collage_background_color: typeof enum_studies_blocks_image_content_collage_background_color
  enum_studies_blocks_image_content_collage_link_type: typeof enum_studies_blocks_image_content_collage_link_type
  enum_studies_blocks_image_grid_background_color: typeof enum_studies_blocks_image_grid_background_color
  enum_studies_blocks_slider_background_color: typeof enum_studies_blocks_slider_background_color
  enum_studies_blocks_spacer_size: typeof enum_studies_blocks_spacer_size
  enum_studies_blocks_statistics_top_overlap: typeof enum_studies_blocks_statistics_top_overlap
  enum_studies_blocks_statistics_bottom_overlap: typeof enum_studies_blocks_statistics_bottom_overlap
  enum_studies_blocks_study_slider_background_color: typeof enum_studies_blocks_study_slider_background_color
  enum_pages_blocks_call_to_action_actions_link_type: typeof enum_pages_blocks_call_to_action_actions_link_type
  enum_pages_blocks_call_to_action_background_color: typeof enum_pages_blocks_call_to_action_background_color
  enum_pages_blocks_content_columns_width: typeof enum_pages_blocks_content_columns_width
  enum_pages_blocks_content_columns_alignment: typeof enum_pages_blocks_content_columns_alignment
  enum_pages_blocks_content_background_color: typeof enum_pages_blocks_content_background_color
  enum_pages_blocks_content_accent_line_alignment: typeof enum_pages_blocks_content_accent_line_alignment
  enum_pages_blocks_content_padding_top: typeof enum_pages_blocks_content_padding_top
  enum_pages_blocks_content_padding_bottom: typeof enum_pages_blocks_content_padding_bottom
  enum_pages_blocks_cta_grid_actions_link_type: typeof enum_pages_blocks_cta_grid_actions_link_type
  enum_pages_blocks_image_type: typeof enum_pages_blocks_image_type
  enum_pages_blocks_image_content_collage_background_color: typeof enum_pages_blocks_image_content_collage_background_color
  enum_pages_blocks_image_content_collage_link_type: typeof enum_pages_blocks_image_content_collage_link_type
  enum_pages_blocks_image_grid_background_color: typeof enum_pages_blocks_image_grid_background_color
  enum_pages_blocks_slider_background_color: typeof enum_pages_blocks_slider_background_color
  enum_pages_blocks_spacer_size: typeof enum_pages_blocks_spacer_size
  enum_pages_blocks_statistics_top_overlap: typeof enum_pages_blocks_statistics_top_overlap
  enum_pages_blocks_statistics_bottom_overlap: typeof enum_pages_blocks_statistics_bottom_overlap
  enum_pages_blocks_study_slider_background_color: typeof enum_pages_blocks_study_slider_background_color
  enum_pages_hero_type: typeof enum_pages_hero_type
  enum_mega_menu_nav_link_type: typeof enum_mega_menu_nav_link_type
  enum_footer_nav_link_type: typeof enum_footer_nav_link_type
  users: typeof users
  media: typeof media
  form_submissions: typeof form_submissions
  studies_blocks_call_to_action_actions: typeof studies_blocks_call_to_action_actions
  studies_blocks_call_to_action: typeof studies_blocks_call_to_action
  studies_blocks_content_columns: typeof studies_blocks_content_columns
  studies_blocks_content: typeof studies_blocks_content
  studies_blocks_cta_grid_actions: typeof studies_blocks_cta_grid_actions
  studies_blocks_cta_grid: typeof studies_blocks_cta_grid
  studies_blocks_image: typeof studies_blocks_image
  studies_blocks_image_collage_images: typeof studies_blocks_image_collage_images
  studies_blocks_image_collage: typeof studies_blocks_image_collage
  studies_blocks_image_content_collage_images: typeof studies_blocks_image_content_collage_images
  studies_blocks_image_content_collage: typeof studies_blocks_image_content_collage
  studies_blocks_image_grid_images: typeof studies_blocks_image_grid_images
  studies_blocks_image_grid: typeof studies_blocks_image_grid
  studies_blocks_image_stat_collage_stats: typeof studies_blocks_image_stat_collage_stats
  studies_blocks_image_stat_collage_images: typeof studies_blocks_image_stat_collage_images
  studies_blocks_image_stat_collage: typeof studies_blocks_image_stat_collage
  studies_blocks_slider_images: typeof studies_blocks_slider_images
  studies_blocks_slider: typeof studies_blocks_slider
  studies_blocks_spacer: typeof studies_blocks_spacer
  studies_blocks_statistics_stats: typeof studies_blocks_statistics_stats
  studies_blocks_statistics: typeof studies_blocks_statistics
  studies_blocks_sticky_content_sections: typeof studies_blocks_sticky_content_sections
  studies_blocks_sticky_content: typeof studies_blocks_sticky_content
  studies_blocks_study_slider: typeof studies_blocks_study_slider
  studies_preview_images: typeof studies_preview_images
  studies: typeof studies
  studies_rels: typeof studies_rels
  categories: typeof categories
  pages_blocks_call_to_action_actions: typeof pages_blocks_call_to_action_actions
  pages_blocks_call_to_action: typeof pages_blocks_call_to_action
  pages_blocks_content_columns: typeof pages_blocks_content_columns
  pages_blocks_content: typeof pages_blocks_content
  pages_blocks_cta_grid_actions: typeof pages_blocks_cta_grid_actions
  pages_blocks_cta_grid: typeof pages_blocks_cta_grid
  pages_blocks_image: typeof pages_blocks_image
  pages_blocks_image_collage_images: typeof pages_blocks_image_collage_images
  pages_blocks_image_collage: typeof pages_blocks_image_collage
  pages_blocks_image_content_collage_images: typeof pages_blocks_image_content_collage_images
  pages_blocks_image_content_collage: typeof pages_blocks_image_content_collage
  pages_blocks_image_grid_images: typeof pages_blocks_image_grid_images
  pages_blocks_image_grid: typeof pages_blocks_image_grid
  pages_blocks_image_stat_collage_stats: typeof pages_blocks_image_stat_collage_stats
  pages_blocks_image_stat_collage_images: typeof pages_blocks_image_stat_collage_images
  pages_blocks_image_stat_collage: typeof pages_blocks_image_stat_collage
  pages_blocks_slider_images: typeof pages_blocks_slider_images
  pages_blocks_slider: typeof pages_blocks_slider
  pages_blocks_spacer: typeof pages_blocks_spacer
  pages_blocks_statistics_stats: typeof pages_blocks_statistics_stats
  pages_blocks_statistics: typeof pages_blocks_statistics
  pages_blocks_sticky_content_sections: typeof pages_blocks_sticky_content_sections
  pages_blocks_sticky_content: typeof pages_blocks_sticky_content
  pages_blocks_study_slider: typeof pages_blocks_study_slider
  pages: typeof pages
  pages_rels: typeof pages_rels
  payload_locked_documents: typeof payload_locked_documents
  payload_locked_documents_rels: typeof payload_locked_documents_rels
  payload_preferences: typeof payload_preferences
  payload_preferences_rels: typeof payload_preferences_rels
  payload_migrations: typeof payload_migrations
  mega_menu_nav: typeof mega_menu_nav
  mega_menu: typeof mega_menu
  social_media_links: typeof social_media_links
  social_media: typeof social_media
  footer_nav: typeof footer_nav
  footer: typeof footer
  relations_users: typeof relations_users
  relations_media: typeof relations_media
  relations_form_submissions: typeof relations_form_submissions
  relations_studies_blocks_call_to_action_actions: typeof relations_studies_blocks_call_to_action_actions
  relations_studies_blocks_call_to_action: typeof relations_studies_blocks_call_to_action
  relations_studies_blocks_content_columns: typeof relations_studies_blocks_content_columns
  relations_studies_blocks_content: typeof relations_studies_blocks_content
  relations_studies_blocks_cta_grid_actions: typeof relations_studies_blocks_cta_grid_actions
  relations_studies_blocks_cta_grid: typeof relations_studies_blocks_cta_grid
  relations_studies_blocks_image: typeof relations_studies_blocks_image
  relations_studies_blocks_image_collage_images: typeof relations_studies_blocks_image_collage_images
  relations_studies_blocks_image_collage: typeof relations_studies_blocks_image_collage
  relations_studies_blocks_image_content_collage_images: typeof relations_studies_blocks_image_content_collage_images
  relations_studies_blocks_image_content_collage: typeof relations_studies_blocks_image_content_collage
  relations_studies_blocks_image_grid_images: typeof relations_studies_blocks_image_grid_images
  relations_studies_blocks_image_grid: typeof relations_studies_blocks_image_grid
  relations_studies_blocks_image_stat_collage_stats: typeof relations_studies_blocks_image_stat_collage_stats
  relations_studies_blocks_image_stat_collage_images: typeof relations_studies_blocks_image_stat_collage_images
  relations_studies_blocks_image_stat_collage: typeof relations_studies_blocks_image_stat_collage
  relations_studies_blocks_slider_images: typeof relations_studies_blocks_slider_images
  relations_studies_blocks_slider: typeof relations_studies_blocks_slider
  relations_studies_blocks_spacer: typeof relations_studies_blocks_spacer
  relations_studies_blocks_statistics_stats: typeof relations_studies_blocks_statistics_stats
  relations_studies_blocks_statistics: typeof relations_studies_blocks_statistics
  relations_studies_blocks_sticky_content_sections: typeof relations_studies_blocks_sticky_content_sections
  relations_studies_blocks_sticky_content: typeof relations_studies_blocks_sticky_content
  relations_studies_blocks_study_slider: typeof relations_studies_blocks_study_slider
  relations_studies_preview_images: typeof relations_studies_preview_images
  relations_studies_rels: typeof relations_studies_rels
  relations_studies: typeof relations_studies
  relations_categories: typeof relations_categories
  relations_pages_blocks_call_to_action_actions: typeof relations_pages_blocks_call_to_action_actions
  relations_pages_blocks_call_to_action: typeof relations_pages_blocks_call_to_action
  relations_pages_blocks_content_columns: typeof relations_pages_blocks_content_columns
  relations_pages_blocks_content: typeof relations_pages_blocks_content
  relations_pages_blocks_cta_grid_actions: typeof relations_pages_blocks_cta_grid_actions
  relations_pages_blocks_cta_grid: typeof relations_pages_blocks_cta_grid
  relations_pages_blocks_image: typeof relations_pages_blocks_image
  relations_pages_blocks_image_collage_images: typeof relations_pages_blocks_image_collage_images
  relations_pages_blocks_image_collage: typeof relations_pages_blocks_image_collage
  relations_pages_blocks_image_content_collage_images: typeof relations_pages_blocks_image_content_collage_images
  relations_pages_blocks_image_content_collage: typeof relations_pages_blocks_image_content_collage
  relations_pages_blocks_image_grid_images: typeof relations_pages_blocks_image_grid_images
  relations_pages_blocks_image_grid: typeof relations_pages_blocks_image_grid
  relations_pages_blocks_image_stat_collage_stats: typeof relations_pages_blocks_image_stat_collage_stats
  relations_pages_blocks_image_stat_collage_images: typeof relations_pages_blocks_image_stat_collage_images
  relations_pages_blocks_image_stat_collage: typeof relations_pages_blocks_image_stat_collage
  relations_pages_blocks_slider_images: typeof relations_pages_blocks_slider_images
  relations_pages_blocks_slider: typeof relations_pages_blocks_slider
  relations_pages_blocks_spacer: typeof relations_pages_blocks_spacer
  relations_pages_blocks_statistics_stats: typeof relations_pages_blocks_statistics_stats
  relations_pages_blocks_statistics: typeof relations_pages_blocks_statistics
  relations_pages_blocks_sticky_content_sections: typeof relations_pages_blocks_sticky_content_sections
  relations_pages_blocks_sticky_content: typeof relations_pages_blocks_sticky_content
  relations_pages_blocks_study_slider: typeof relations_pages_blocks_study_slider
  relations_pages_rels: typeof relations_pages_rels
  relations_pages: typeof relations_pages
  relations_payload_locked_documents_rels: typeof relations_payload_locked_documents_rels
  relations_payload_locked_documents: typeof relations_payload_locked_documents
  relations_payload_preferences_rels: typeof relations_payload_preferences_rels
  relations_payload_preferences: typeof relations_payload_preferences
  relations_payload_migrations: typeof relations_payload_migrations
  relations_mega_menu_nav: typeof relations_mega_menu_nav
  relations_mega_menu: typeof relations_mega_menu
  relations_social_media_links: typeof relations_social_media_links
  relations_social_media: typeof relations_social_media
  relations_footer_nav: typeof relations_footer_nav
  relations_footer: typeof relations_footer
}

declare module '@payloadcms/db-vercel-postgres/types' {
  export interface GeneratedDatabaseSchema {
    schema: DatabaseSchema
  }
}
